{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Evolucion\u00e1 tu forma de operar Bienvenido a los servicios API de Portfolio Personal Inversiones Cre\u00e1 tus propias herramientas y soluciones de trading mediante las APIs de PPI, las cuales te permiten: Acceder a informaci\u00f3n y cotizaciones de los instrumentos disponibles en PPI. Acceder a cotizaciones por streaming en tiempo real, para que siempre tengas los \u00faltimos precios. Consultar tu saldo operable y el estado de tu cuenta. Presupuestar y enviar ordenes al mercado de Bonos, Acciones, CEDEARs y muchos instrumentos m\u00e1s. Primeros Pasos En esta secci\u00f3n encontrar\u00e1s toda la informaci\u00f3n necesaria para comenzar a utilizar e interactuar con nuestra librer\u00eda y servicios REST. Productos API En la secci\u00f3n de \"Productos API\" se pueden consultar la totalidad de servicios disponibles para consumir, junto con descripciones y ejemplos de los mismos. FAQ En este apartado podr\u00e1s consultar las principales dudas sobre nuestras herramientas disponibles y su uso. Nuestros repositorios y documentaci\u00f3n se encuentran en mejora y actualizaci\u00f3n continua, por lo que te sugerimos estar atento a los cambios y novedades en esta secci\u00f3n. Si requieres saber que versi\u00f3n de la API tenemos habilitada actualmente, dirigite a la secci\u00f3n \"Productos API\" , y luego al apartado REST . Al inicio de la p\u00e1gina encontrar\u00e1s dicha informaci\u00f3n.","title":"Inicio"},{"location":"#evoluciona-tu-forma-de-operar","text":"Bienvenido a los servicios API de Portfolio Personal Inversiones Cre\u00e1 tus propias herramientas y soluciones de trading mediante las APIs de PPI, las cuales te permiten: Acceder a informaci\u00f3n y cotizaciones de los instrumentos disponibles en PPI. Acceder a cotizaciones por streaming en tiempo real, para que siempre tengas los \u00faltimos precios. Consultar tu saldo operable y el estado de tu cuenta. Presupuestar y enviar ordenes al mercado de Bonos, Acciones, CEDEARs y muchos instrumentos m\u00e1s. Primeros Pasos En esta secci\u00f3n encontrar\u00e1s toda la informaci\u00f3n necesaria para comenzar a utilizar e interactuar con nuestra librer\u00eda y servicios REST. Productos API En la secci\u00f3n de \"Productos API\" se pueden consultar la totalidad de servicios disponibles para consumir, junto con descripciones y ejemplos de los mismos. FAQ En este apartado podr\u00e1s consultar las principales dudas sobre nuestras herramientas disponibles y su uso. Nuestros repositorios y documentaci\u00f3n se encuentran en mejora y actualizaci\u00f3n continua, por lo que te sugerimos estar atento a los cambios y novedades en esta secci\u00f3n. Si requieres saber que versi\u00f3n de la API tenemos habilitada actualmente, dirigite a la secci\u00f3n \"Productos API\" , y luego al apartado REST . Al inicio de la p\u00e1gina encontrar\u00e1s dicha informaci\u00f3n.","title":"Evolucion\u00e1 tu forma de operar"},{"location":"faq/","text":"Preguntas Frecuentes \u00bfC\u00f3mo empiezo a usar la librer\u00eda de PPI? En esta p\u00e1gina vas a encontrar toda la informaci\u00f3n necesaria para que verifiques los servicios y documentaci\u00f3n disponibles de nuestra librer\u00eda y servicios REST. Luego, para acceder a ambientes de prueba y realizar consultas a la API, tendr\u00e1s que contactarte con nosotros al email api@portfoliopersonal.com desde tu email registrado en PPI, informando tu nombre, apellido, DNI y n\u00famero de cuenta en PPI para que podamos brindarte los datos de acceso correspondientes. \u00bfQu\u00e9 conocimientos necesito para usar APIs? Necesit\u00e1s tener conocimientos generales sobre herramientas de programaci\u00f3n y c\u00f3digo, una versi\u00f3n de Python superior a 3.9 instalada, conocimientos b\u00e1sicos sobre c\u00f3mo hacer consultas de servicios REST, conocimientos b\u00e1sicos de Python y operatoria de mercado. \u00bfHay un entorno de prueba disponible? S\u00ed, vas a tener a disposici\u00f3n un ambiente Sandbox en el cual podr\u00e1s consumir la API previo al consumo de datos productivos y probar el desarrollo de tu propio c\u00f3digo. \u00bfEs seguro usar APIs? El uso de APIs es seguro. Para interactuar con la librer\u00eda y/o los servicios REST necesit\u00e1s contar con un token v\u00e1lido, el cual consta de una serie de d\u00edgitos y caracteres con una validez de tiempo limitado. Este lo podr\u00e1s obtener ejecutando un login con tus credenciales de acceso. \u00bfTengo que cumplir con alg\u00fan requisito para usar la API? No. \u00danicamente ten\u00e9s que tener una Cuenta Comitente en PPI. \u00bfD\u00f3nde puedo resolver mis dudas y consultas sobre la API? Toda la documentaci\u00f3n sobre nuestros servicios se encuentra disponible en MK Docs detallando la \u00faltima versi\u00f3n generada de la API para consultarla cuando lo necesites. A la vez, en nuestra comunidad de GitHub podr\u00e1s realizar las consultas que necesites, como tambi\u00e9n crear proyectos y compartirlos a la comunidad.","title":"FAQ"},{"location":"faq/#preguntas-frecuentes","text":"\u00bfC\u00f3mo empiezo a usar la librer\u00eda de PPI? En esta p\u00e1gina vas a encontrar toda la informaci\u00f3n necesaria para que verifiques los servicios y documentaci\u00f3n disponibles de nuestra librer\u00eda y servicios REST. Luego, para acceder a ambientes de prueba y realizar consultas a la API, tendr\u00e1s que contactarte con nosotros al email api@portfoliopersonal.com desde tu email registrado en PPI, informando tu nombre, apellido, DNI y n\u00famero de cuenta en PPI para que podamos brindarte los datos de acceso correspondientes. \u00bfQu\u00e9 conocimientos necesito para usar APIs? Necesit\u00e1s tener conocimientos generales sobre herramientas de programaci\u00f3n y c\u00f3digo, una versi\u00f3n de Python superior a 3.9 instalada, conocimientos b\u00e1sicos sobre c\u00f3mo hacer consultas de servicios REST, conocimientos b\u00e1sicos de Python y operatoria de mercado. \u00bfHay un entorno de prueba disponible? S\u00ed, vas a tener a disposici\u00f3n un ambiente Sandbox en el cual podr\u00e1s consumir la API previo al consumo de datos productivos y probar el desarrollo de tu propio c\u00f3digo. \u00bfEs seguro usar APIs? El uso de APIs es seguro. Para interactuar con la librer\u00eda y/o los servicios REST necesit\u00e1s contar con un token v\u00e1lido, el cual consta de una serie de d\u00edgitos y caracteres con una validez de tiempo limitado. Este lo podr\u00e1s obtener ejecutando un login con tus credenciales de acceso. \u00bfTengo que cumplir con alg\u00fan requisito para usar la API? No. \u00danicamente ten\u00e9s que tener una Cuenta Comitente en PPI. \u00bfD\u00f3nde puedo resolver mis dudas y consultas sobre la API? Toda la documentaci\u00f3n sobre nuestros servicios se encuentra disponible en MK Docs detallando la \u00faltima versi\u00f3n generada de la API para consultarla cuando lo necesites. A la vez, en nuestra comunidad de GitHub podr\u00e1s realizar las consultas que necesites, como tambi\u00e9n crear proyectos y compartirlos a la comunidad.","title":"Preguntas Frecuentes"},{"location":"api/documentacionPython/","text":"Documentaci\u00f3n Librer\u00eda Python Necessary Imports # Imports from ppi_client.models.account_movements import AccountMovements from ppi_client.ppi import PPI from ppi_client.models.orders_filter import OrdersFilter from ppi_client.models.order_budget import OrderBudget from ppi_client.models.order_confirm import OrderConfirm from ppi_client.models.disclaimer import Disclaimer from ppi_client.models.search_instrument import SearchInstrument from ppi_client.models.search_marketdata import SearchMarketData from ppi_client.models.search_datemarketdata import SearchDateMarketData from ppi_client.models.order import Order from ppi_client.models.instrument import Instrument from datetime import datetime , timedelta import asyncio import json import traceback Sandbox Environment # Change sandbox variable to False to connect to production environment ppi = PPI ( sandbox = False ) Login # Change login credential to connect to the API ppi . account . login ( '<user key>' , '<user secret>' ) Account Information # Getting accounts information print ( \"Getting accounts information\" ) account_numbers = ppi . account . get_accounts () for account in account_numbers : print ( account ) account_number = account_numbers [ 0 ][ 'accountNumber' ] Response Account Information [ { \"accountNumber\" : \"string\" , \"name\" : \"string\" , \"officer\" : { \"name\" : \"string\" , \"eMail\" : \"string\" , \"phone\" : \"string\" } } ] Bank Account Information # Getting bank account information print ( \" \\n Getting bank account information of %s \" % account_number ) bank_accounts = ppi . account . get_bank_accounts ( account_number ) for bank_account in bank_accounts : print ( bank_account ) Response Bank Account Information [ { \"bankName\" : \"string\" , \"bankAccountNumber\" : \"string\" , \"bankIdentifier\" : \"string\" , \"currency\" : \"string\" , \"taxHolderIdentifier\" : \"string\" } ] Available Balance # Getting available balance print ( \" \\n Getting available balance of %s \" % account_number ) balances = ppi . account . get_available_balance ( account_number ) for balance in balances : print ( \"Currency %s - Settlement %s - Amount %s %s \" % ( balance [ 'name' ], balance [ 'settlement' ], balance [ 'symbol' ], balance [ 'amount' ])) Response Available Balance [ { \"name\" : \"string\" , \"simbol\" : \"string\" , \"amount\" : 0 , \"settlement\" : \"string\" } ] Balances and Positions # Getting balance and positions print ( \" \\n Getting balance and positions of %s \" % account_number ) balances_positions = ppi . account . get_balance_and_positions ( account_number ) for balance in balances_positions [ \"groupedAvailability\" ]: for currency in balance [ 'availability' ]: print ( \"Currency %s Settlement %s Amount %s %s \" % ( currency [ 'name' ], currency [ 'settlement' ], currency [ 'symbol' ], currency [ 'amount' ])) for instruments in balances_positions [ \"groupedInstruments\" ]: print ( \"Instrument %s \" % instruments [ 'name' ]) for instrument in instruments [ 'instruments' ]: print ( \"Ticker %s Price %s Amount %s \" % ( instrument [ 'ticker' ], instrument [ 'price' ], instrument [ 'amount' ])) Response Balances and Positions [ { \"currency\" : \"string\" , \"availability\" : [ { \"name\" : \"string\" , \"simbol\" : \"string\" , \"amount\" : 0 , \"settlement\" : \"string\" } ] } ] Movements # Getting movements print ( \" \\n Getting movements of %s \" % account_number ) movements = ppi . account . get_movements ( AccountMovements ( account_number , \"2021-12-01\" , \"2021-12-31\" , None )) for mov in movements : print ( \" %s %s - Currency %s Amount %s \" % ( mov [ 'settlementDate' ], mov [ 'description' ], mov [ 'currency' ], mov [ 'amount' ])) Response Movements [ { \"agreementDate\" : \"2022-01-19T14:32:51.776Z\" , \"settlementDate\" : \"2022-01-19T14:32:51.776Z\" , \"currency\" : \"string\" , \"amount\" : 0 , \"price\" : 0 , \"description\" : \"string\" , \"ticker\" : \"string\" , \"quantity\" : 0 , \"balance\" : 0 } ] Instrument Types # Getting instrument types print ( \" \\n Getting instrument types\" ) instruments = ppi . configuration . get_instrument_types () for item in instruments : print ( item ) Response Instrument Types [ \"BONOS\" , \"LETRAS\" , \"NOBAC\" , \"LEBAC\" , \"ON\" , \"FCI\" , \"CAUCIONES\" , \"ACCIONES\" , \"ETF\" , \"CEDEARS\" , \"OPCIONES\" , \"FUTUROS\" , \"ACCIONES-USA\" , \"FCI-EXTERIOR\" ] Markets # Getting markets print ( \" \\n Getting markets\" ) markets = ppi . configuration . get_markets () for item in markets : print ( item ) Response Markets [ \"ROFEX\" , \"OTC\" , \"NYSE\" , \"BYMA\" ] Settlements # Getting settlements print ( \" \\n Getting settlements\" ) settlements = ppi . configuration . get_settlements () for item in settlements : print ( item ) Response Settlements [ \"INMEDIATA\" , \"A-24HS\" , \"A-48HS\" , \"A-72HS\" ] Quantity Types # Getting quantity types print ( \" \\n Getting quantity types\" ) quantity_types = ppi . configuration . get_quantity_types () for item in quantity_types : print ( item ) Response Quantity Types [ \"DINERO\" , \"PAPELES\" , \"CANTIDAD-TOTAL\" ] Operation Terms # Getting operation terms print ( \" \\n Getting operation terms\" ) operation_terms = ppi . configuration . get_operation_terms () for item in operation_terms : print ( item ) Response Operation Terms [ \"POR-EL-D\u00cdA\" , \"HASTA-SU-EJECUCI\u00d3N\" , \"V\u00c1LIDA-HASTA-EL\" , \"72-HS\" ] Operation Types # Getting operation types print ( \" \\n Getting operation types\" ) operation_types = ppi . configuration . get_operation_types () for item in operation_types : print ( item ) Response Operation Types [ \"PRECIO-DE-MERCADO\" , \"PRECIO-LIMITE\" ] Operations # Getting operations print ( \" \\n Getting operations\" ) operations = ppi . configuration . get_operations () for item in operations : print ( item ) Response Operations [ \"COMPRA\" , \"VENTA\" , \"SUSCRIPCI\u00d3N-FCI\" , \"RESCATE-FCI\" , \"COLOCAR-CAUCI\u00d3N\" ] Search Instrument # Search Instrument print ( \" \\n Searching instruments\" ) instruments = ppi . marketdata . search_instrument ( SearchInstrument ( \"GGAL\" , \"\" , \"Byma\" , \"Acciones\" )) for ins in instruments : print ( ins ) Response Instrument [ { \"ticker\" : \"string\" , \"description\" : \"string\" , \"currency\" : \"string\" , \"type\" : \"string\" , \"market\" : \"string\" }, ... ] Search Historical Market Data # Search Historic MarketData print ( \" \\n Searching MarketData\" ) market_data = ppi . marketdata . search ( SearchDateMarketData ( \"GGAL\" , \"Acciones\" , \"A-48HS\" , \"2021-01-01\" , \"2021-12-31\" )) for ins in market_data : print ( \" %s - %s - Volume %s - Opening %s - Min %s - Max %s \" % ( ins [ 'date' ], ins [ 'price' ], ins [ 'volume' ], ins [ 'openingPrice' ], ins [ 'min' ], ins [ 'max' ])) Response Historical Market Data [ { \"date\" : \"string\" , \"price\" : 0 , \"volume\" : 0 , \"openingPrice\" : 0 , \"max\" : 0 , \"min\" : 0 }, ... ] Search Current Market Data # Search Current MarketData print ( \" \\n Searching Current MarketData\" ) current_market_data = ppi . marketdata . current ( SearchMarketData ( \"GGAL\" , \"Acciones\" , \"A-48HS\" )) print ( current_market_data ) Response Current Market Data { \"date\" : \"string\" , \"price\" : 0 , \"volume\" : 0 , \"openingPrice\" : 0 , \"max\" : 0 , \"min\" : 0 } Search Current Book # Search Current Book print ( \" \\n Searching Current Book\" ) current_book = ppi . marketdata . book ( SearchMarketData ( \"GGAL\" , \"Acciones\" , \"A-48HS\" )) print ( current_book ) Response Current Book { \"date\" : \"2022-02-24T12:31:04.581Z\" , \"offers\" : [ { \"position\" : 0 , \"price\" : 0 , \"quantity\" : 0 } ], \"bids\" : [ { \"position\" : 0 , \"price\" : 0 , \"quantity\" : 0 } ] } Search Intraday Market Data # Search Intraday MarketData print ( \" \\n Searching Intraday MarketData\" ) intraday_market_data = ppi . marketdata . intraday ( SearchMarketData ( \"GGAL\" , \"Acciones\" , \"A-48HS\" )) for intra in intraday_market_data : print ( intra ) Response Intraday Market Data [ { \"date\" : \"string\" , \"price\" : 0 , \"volume\" : 0 }, ... ] Orders # Get orders print ( \" \\n Get orders\" ) orders = ppi . orders . get_orders ( OrdersFilter ( from_date = datetime . today () + timedelta ( days =- 10 ), to_date = datetime . today (), account_number = account_number )) for order in orders : print ( order ) Response Orders [ { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:28:19.627Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:28:19.627Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"externalID\" : \"string\" } ] Budget of an Order ''' Uncomment to get the budget of an order # Get budget print(\"\\nGet budget\") budget = ppi.orders.budget(OrderBudget(account_number, 10000, 150, \"GGAL\", \"ACCIONES\", \"Dinero\", \"PRECIO-LIMITE\" , \"HASTA-SU-EJECUCI\u00d3N\", None, \"Compra\", \"INMEDIATA\")) print(budget) disclaimers = budget['disclaimers'] ''' Response Budget of an Order { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:41:14.986Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:41:14.986Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"disclaimers\" : [ { \"code\" : \"string\" , \"description\" : \"string\" , \"mandatory\" : true , \"accepted\" : true } ] } Create an Order ''' Uncomment to create an order # Confirm budget print(\"\\nConfirm budget\") acceptedDisclaimers = [] for disclaimer in disclaimers: acceptedDisclaimers.append(Disclaimer(disclaimer['code'], True)) confirmation = ppi.orders.confirm(OrderConfirm(account_number, 10000, 150, \"GGAL\", \"ACCIONES\", \"Dinero\", \"PRECIO-LIMITE\", \"HASTA-SU-EJECUCI\u00d3N\", None, \"Compra\" , \"INMEDIATA\", acceptedDisclaimers, None)) print(confirmation) order_id = confirmation[\"id\"] ''' Response Create an Order { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-02-24T11:59:18.708Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-02-24T11:59:18.708Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"externalID\" : \"string\" } Detail of an Order ''' Uncomment to get the detail of an order # Get order detail print(\"\\nGet order detail\") detail = ppi.orders.get_order_detail(Order(order_id, account_number, None)) print(detail) ''' Response Detail of an Order { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:39:06.888Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:39:06.888Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"externalID\" : \"string\" } Execute Cancellation of an Order ''' Uncomment to execute cancellation of an order # Cancel order print(\"\\nCancel order\") cancel = ppi.orders.cancel_order(Order(order_id, account_number, None)) print(cancel) ''' Response Cancellation of an Order { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:58:00.749Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:58:00.749Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 } Execute Mass Cancellation of Orders ''' Uncomment to execute mass cancellation of orders # Cancel all active orders print(\"\\nMass Cancel\") cancels = ppi.orders.mass_cancel_order(account_number) print(cancels) ''' Response Mass Cancellation of Orders s tr i n g Realtime Subscription to Market Data / Realtime Broadcast Market Data ''' Uncomment to use realtime market data # Realtime subscription to market data def onconnect(): try: print(\"\\nConnected to realtime\") ppi.realtime.subscribe_to_element(Instrument(\"GGAL\", \"ACCIONES\", \"A-48HS\")) ppi.realtime.subscribe_to_element(Instrument(\"AAPL\", \"CEDEARS\", \"A-48HS\")) ppi.realtime.subscribe_to_element(Instrument(\"AL30\", \"BONOS\", \"INMEDIATA\")) ppi.realtime.subscribe_to_element(Instrument(\"AL30D\", \"BONOS\", \"INMEDIATA\")) ppi.realtime.subscribe_to_element(Instrument(\"DLR/MAR22\", \"FUTUROS\", \"INMEDIATA\")) except Exception as error: traceback.print_exc() def ondisconnect(): try: print(\"\\nDisconnected from realtime\") except Exception as error: traceback.print_exc() # Realtime broadcast market data def onmarketdata(data): try: msg = json.loads(data) if msg[\"Trade\"]: print(\"%s [%s-%s] Price %.2f Volume %.2f\" % ( msg['Date'], msg['Ticker'], msg['Settlement'], msg['Price'], msg['VolumeAmount'])) else: if len(msg['Bids']) > 0: bid = msg['Bids'][0]['Price'] else: bid = 0 if len(msg['Offers']) > 0: offer = msg['Offers'][0]['Price'] else: offer = 0 print( \"%s [%s-%s] Offers: %.2f-%.2f Opening: %.2f MaxDay: %.2f MinDay: %.2f Accumulated Volume %.2f\" % ( msg['Date'], msg['Ticker'], msg['Settlement'], bid, offer, msg['OpeningPrice'], msg['MaxDay'], msg['MinDay'], msg['VolumeTotalAmount'])) except Exception as error: traceback.print_exc() ppi.realtime.connect_to_market_data(onconnect, ondisconnect, onmarketdata) ''' Response Books { \"Ticker\" : \"string\" , \"Price\" : 0.0 , \"VolumeAmount\" : 0.0 , \"VolumeCurrency\" : 0.0 , \"Date\" : \"2022-03-14T16:52:51.87-03:00\" , \"Type\" : \"string\" , \"Settlement\" : \"string\" , \"VarDay\" : 0.0 , \"Offers\" : [ { \"Price\" : 0.0 , \"Quantity\" : 0.0 , \"Position\" : 0 }, { \"Price\" : 0.0 , \"Quantity\" : 0.0 , \"Position\" : 0 }, ... ], \"Bids\" : [ { \"Price\" : 0.0 , \"Quantity\" : 0.0 , \"Position\" : 0 }, { \"Price\" : 0.0 , \"Quantity\" : 0.0 , \"Position\" : 0 }, ... ], \"Trade\" : False , \"OpeningPrice\" : 0.0 , \"MaxDay\" : 0.0 , \"MinDay\" : 0.0 , \"VolumeTotalAmount\" : 0 } Response Market Data { \"Ticker\" : \"string\" , \"Price\" : 0.0 , \"VolumeAmount\" : 0.0 , \"VolumeCurrency\" : 0.0 , \"Date\" : \"2022-03-14T16:52:51.87-03:00\" , \"Type\" : \"string\" , \"Settlement\" : \"string\" , \"VarDay\" : 0.0 , \"Offers\" : [], \"Bids\" : [], \"Trade\" : True , \"OpeningPrice\" : 0.0 , \"MaxDay\" : 0.0 , \"MinDay\" : 0.0 , \"VolumeTotalAmount\" : 0 }","title":"Documentaci\u00f3n - Libreria Python"},{"location":"api/documentacionPython/#documentacion-libreria-python","text":"Necessary Imports # Imports from ppi_client.models.account_movements import AccountMovements from ppi_client.ppi import PPI from ppi_client.models.orders_filter import OrdersFilter from ppi_client.models.order_budget import OrderBudget from ppi_client.models.order_confirm import OrderConfirm from ppi_client.models.disclaimer import Disclaimer from ppi_client.models.search_instrument import SearchInstrument from ppi_client.models.search_marketdata import SearchMarketData from ppi_client.models.search_datemarketdata import SearchDateMarketData from ppi_client.models.order import Order from ppi_client.models.instrument import Instrument from datetime import datetime , timedelta import asyncio import json import traceback Sandbox Environment # Change sandbox variable to False to connect to production environment ppi = PPI ( sandbox = False ) Login # Change login credential to connect to the API ppi . account . login ( '<user key>' , '<user secret>' ) Account Information # Getting accounts information print ( \"Getting accounts information\" ) account_numbers = ppi . account . get_accounts () for account in account_numbers : print ( account ) account_number = account_numbers [ 0 ][ 'accountNumber' ] Response Account Information [ { \"accountNumber\" : \"string\" , \"name\" : \"string\" , \"officer\" : { \"name\" : \"string\" , \"eMail\" : \"string\" , \"phone\" : \"string\" } } ] Bank Account Information # Getting bank account information print ( \" \\n Getting bank account information of %s \" % account_number ) bank_accounts = ppi . account . get_bank_accounts ( account_number ) for bank_account in bank_accounts : print ( bank_account ) Response Bank Account Information [ { \"bankName\" : \"string\" , \"bankAccountNumber\" : \"string\" , \"bankIdentifier\" : \"string\" , \"currency\" : \"string\" , \"taxHolderIdentifier\" : \"string\" } ] Available Balance # Getting available balance print ( \" \\n Getting available balance of %s \" % account_number ) balances = ppi . account . get_available_balance ( account_number ) for balance in balances : print ( \"Currency %s - Settlement %s - Amount %s %s \" % ( balance [ 'name' ], balance [ 'settlement' ], balance [ 'symbol' ], balance [ 'amount' ])) Response Available Balance [ { \"name\" : \"string\" , \"simbol\" : \"string\" , \"amount\" : 0 , \"settlement\" : \"string\" } ] Balances and Positions # Getting balance and positions print ( \" \\n Getting balance and positions of %s \" % account_number ) balances_positions = ppi . account . get_balance_and_positions ( account_number ) for balance in balances_positions [ \"groupedAvailability\" ]: for currency in balance [ 'availability' ]: print ( \"Currency %s Settlement %s Amount %s %s \" % ( currency [ 'name' ], currency [ 'settlement' ], currency [ 'symbol' ], currency [ 'amount' ])) for instruments in balances_positions [ \"groupedInstruments\" ]: print ( \"Instrument %s \" % instruments [ 'name' ]) for instrument in instruments [ 'instruments' ]: print ( \"Ticker %s Price %s Amount %s \" % ( instrument [ 'ticker' ], instrument [ 'price' ], instrument [ 'amount' ])) Response Balances and Positions [ { \"currency\" : \"string\" , \"availability\" : [ { \"name\" : \"string\" , \"simbol\" : \"string\" , \"amount\" : 0 , \"settlement\" : \"string\" } ] } ] Movements # Getting movements print ( \" \\n Getting movements of %s \" % account_number ) movements = ppi . account . get_movements ( AccountMovements ( account_number , \"2021-12-01\" , \"2021-12-31\" , None )) for mov in movements : print ( \" %s %s - Currency %s Amount %s \" % ( mov [ 'settlementDate' ], mov [ 'description' ], mov [ 'currency' ], mov [ 'amount' ])) Response Movements [ { \"agreementDate\" : \"2022-01-19T14:32:51.776Z\" , \"settlementDate\" : \"2022-01-19T14:32:51.776Z\" , \"currency\" : \"string\" , \"amount\" : 0 , \"price\" : 0 , \"description\" : \"string\" , \"ticker\" : \"string\" , \"quantity\" : 0 , \"balance\" : 0 } ] Instrument Types # Getting instrument types print ( \" \\n Getting instrument types\" ) instruments = ppi . configuration . get_instrument_types () for item in instruments : print ( item ) Response Instrument Types [ \"BONOS\" , \"LETRAS\" , \"NOBAC\" , \"LEBAC\" , \"ON\" , \"FCI\" , \"CAUCIONES\" , \"ACCIONES\" , \"ETF\" , \"CEDEARS\" , \"OPCIONES\" , \"FUTUROS\" , \"ACCIONES-USA\" , \"FCI-EXTERIOR\" ] Markets # Getting markets print ( \" \\n Getting markets\" ) markets = ppi . configuration . get_markets () for item in markets : print ( item ) Response Markets [ \"ROFEX\" , \"OTC\" , \"NYSE\" , \"BYMA\" ] Settlements # Getting settlements print ( \" \\n Getting settlements\" ) settlements = ppi . configuration . get_settlements () for item in settlements : print ( item ) Response Settlements [ \"INMEDIATA\" , \"A-24HS\" , \"A-48HS\" , \"A-72HS\" ] Quantity Types # Getting quantity types print ( \" \\n Getting quantity types\" ) quantity_types = ppi . configuration . get_quantity_types () for item in quantity_types : print ( item ) Response Quantity Types [ \"DINERO\" , \"PAPELES\" , \"CANTIDAD-TOTAL\" ] Operation Terms # Getting operation terms print ( \" \\n Getting operation terms\" ) operation_terms = ppi . configuration . get_operation_terms () for item in operation_terms : print ( item ) Response Operation Terms [ \"POR-EL-D\u00cdA\" , \"HASTA-SU-EJECUCI\u00d3N\" , \"V\u00c1LIDA-HASTA-EL\" , \"72-HS\" ] Operation Types # Getting operation types print ( \" \\n Getting operation types\" ) operation_types = ppi . configuration . get_operation_types () for item in operation_types : print ( item ) Response Operation Types [ \"PRECIO-DE-MERCADO\" , \"PRECIO-LIMITE\" ] Operations # Getting operations print ( \" \\n Getting operations\" ) operations = ppi . configuration . get_operations () for item in operations : print ( item ) Response Operations [ \"COMPRA\" , \"VENTA\" , \"SUSCRIPCI\u00d3N-FCI\" , \"RESCATE-FCI\" , \"COLOCAR-CAUCI\u00d3N\" ] Search Instrument # Search Instrument print ( \" \\n Searching instruments\" ) instruments = ppi . marketdata . search_instrument ( SearchInstrument ( \"GGAL\" , \"\" , \"Byma\" , \"Acciones\" )) for ins in instruments : print ( ins ) Response Instrument [ { \"ticker\" : \"string\" , \"description\" : \"string\" , \"currency\" : \"string\" , \"type\" : \"string\" , \"market\" : \"string\" }, ... ] Search Historical Market Data # Search Historic MarketData print ( \" \\n Searching MarketData\" ) market_data = ppi . marketdata . search ( SearchDateMarketData ( \"GGAL\" , \"Acciones\" , \"A-48HS\" , \"2021-01-01\" , \"2021-12-31\" )) for ins in market_data : print ( \" %s - %s - Volume %s - Opening %s - Min %s - Max %s \" % ( ins [ 'date' ], ins [ 'price' ], ins [ 'volume' ], ins [ 'openingPrice' ], ins [ 'min' ], ins [ 'max' ])) Response Historical Market Data [ { \"date\" : \"string\" , \"price\" : 0 , \"volume\" : 0 , \"openingPrice\" : 0 , \"max\" : 0 , \"min\" : 0 }, ... ] Search Current Market Data # Search Current MarketData print ( \" \\n Searching Current MarketData\" ) current_market_data = ppi . marketdata . current ( SearchMarketData ( \"GGAL\" , \"Acciones\" , \"A-48HS\" )) print ( current_market_data ) Response Current Market Data { \"date\" : \"string\" , \"price\" : 0 , \"volume\" : 0 , \"openingPrice\" : 0 , \"max\" : 0 , \"min\" : 0 } Search Current Book # Search Current Book print ( \" \\n Searching Current Book\" ) current_book = ppi . marketdata . book ( SearchMarketData ( \"GGAL\" , \"Acciones\" , \"A-48HS\" )) print ( current_book ) Response Current Book { \"date\" : \"2022-02-24T12:31:04.581Z\" , \"offers\" : [ { \"position\" : 0 , \"price\" : 0 , \"quantity\" : 0 } ], \"bids\" : [ { \"position\" : 0 , \"price\" : 0 , \"quantity\" : 0 } ] } Search Intraday Market Data # Search Intraday MarketData print ( \" \\n Searching Intraday MarketData\" ) intraday_market_data = ppi . marketdata . intraday ( SearchMarketData ( \"GGAL\" , \"Acciones\" , \"A-48HS\" )) for intra in intraday_market_data : print ( intra ) Response Intraday Market Data [ { \"date\" : \"string\" , \"price\" : 0 , \"volume\" : 0 }, ... ] Orders # Get orders print ( \" \\n Get orders\" ) orders = ppi . orders . get_orders ( OrdersFilter ( from_date = datetime . today () + timedelta ( days =- 10 ), to_date = datetime . today (), account_number = account_number )) for order in orders : print ( order ) Response Orders [ { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:28:19.627Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:28:19.627Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"externalID\" : \"string\" } ] Budget of an Order ''' Uncomment to get the budget of an order # Get budget print(\"\\nGet budget\") budget = ppi.orders.budget(OrderBudget(account_number, 10000, 150, \"GGAL\", \"ACCIONES\", \"Dinero\", \"PRECIO-LIMITE\" , \"HASTA-SU-EJECUCI\u00d3N\", None, \"Compra\", \"INMEDIATA\")) print(budget) disclaimers = budget['disclaimers'] ''' Response Budget of an Order { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:41:14.986Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:41:14.986Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"disclaimers\" : [ { \"code\" : \"string\" , \"description\" : \"string\" , \"mandatory\" : true , \"accepted\" : true } ] } Create an Order ''' Uncomment to create an order # Confirm budget print(\"\\nConfirm budget\") acceptedDisclaimers = [] for disclaimer in disclaimers: acceptedDisclaimers.append(Disclaimer(disclaimer['code'], True)) confirmation = ppi.orders.confirm(OrderConfirm(account_number, 10000, 150, \"GGAL\", \"ACCIONES\", \"Dinero\", \"PRECIO-LIMITE\", \"HASTA-SU-EJECUCI\u00d3N\", None, \"Compra\" , \"INMEDIATA\", acceptedDisclaimers, None)) print(confirmation) order_id = confirmation[\"id\"] ''' Response Create an Order { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-02-24T11:59:18.708Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-02-24T11:59:18.708Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"externalID\" : \"string\" } Detail of an Order ''' Uncomment to get the detail of an order # Get order detail print(\"\\nGet order detail\") detail = ppi.orders.get_order_detail(Order(order_id, account_number, None)) print(detail) ''' Response Detail of an Order { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:39:06.888Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:39:06.888Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"externalID\" : \"string\" } Execute Cancellation of an Order ''' Uncomment to execute cancellation of an order # Cancel order print(\"\\nCancel order\") cancel = ppi.orders.cancel_order(Order(order_id, account_number, None)) print(cancel) ''' Response Cancellation of an Order { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:58:00.749Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:58:00.749Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 } Execute Mass Cancellation of Orders ''' Uncomment to execute mass cancellation of orders # Cancel all active orders print(\"\\nMass Cancel\") cancels = ppi.orders.mass_cancel_order(account_number) print(cancels) ''' Response Mass Cancellation of Orders s tr i n g Realtime Subscription to Market Data / Realtime Broadcast Market Data ''' Uncomment to use realtime market data # Realtime subscription to market data def onconnect(): try: print(\"\\nConnected to realtime\") ppi.realtime.subscribe_to_element(Instrument(\"GGAL\", \"ACCIONES\", \"A-48HS\")) ppi.realtime.subscribe_to_element(Instrument(\"AAPL\", \"CEDEARS\", \"A-48HS\")) ppi.realtime.subscribe_to_element(Instrument(\"AL30\", \"BONOS\", \"INMEDIATA\")) ppi.realtime.subscribe_to_element(Instrument(\"AL30D\", \"BONOS\", \"INMEDIATA\")) ppi.realtime.subscribe_to_element(Instrument(\"DLR/MAR22\", \"FUTUROS\", \"INMEDIATA\")) except Exception as error: traceback.print_exc() def ondisconnect(): try: print(\"\\nDisconnected from realtime\") except Exception as error: traceback.print_exc() # Realtime broadcast market data def onmarketdata(data): try: msg = json.loads(data) if msg[\"Trade\"]: print(\"%s [%s-%s] Price %.2f Volume %.2f\" % ( msg['Date'], msg['Ticker'], msg['Settlement'], msg['Price'], msg['VolumeAmount'])) else: if len(msg['Bids']) > 0: bid = msg['Bids'][0]['Price'] else: bid = 0 if len(msg['Offers']) > 0: offer = msg['Offers'][0]['Price'] else: offer = 0 print( \"%s [%s-%s] Offers: %.2f-%.2f Opening: %.2f MaxDay: %.2f MinDay: %.2f Accumulated Volume %.2f\" % ( msg['Date'], msg['Ticker'], msg['Settlement'], bid, offer, msg['OpeningPrice'], msg['MaxDay'], msg['MinDay'], msg['VolumeTotalAmount'])) except Exception as error: traceback.print_exc() ppi.realtime.connect_to_market_data(onconnect, ondisconnect, onmarketdata) ''' Response Books { \"Ticker\" : \"string\" , \"Price\" : 0.0 , \"VolumeAmount\" : 0.0 , \"VolumeCurrency\" : 0.0 , \"Date\" : \"2022-03-14T16:52:51.87-03:00\" , \"Type\" : \"string\" , \"Settlement\" : \"string\" , \"VarDay\" : 0.0 , \"Offers\" : [ { \"Price\" : 0.0 , \"Quantity\" : 0.0 , \"Position\" : 0 }, { \"Price\" : 0.0 , \"Quantity\" : 0.0 , \"Position\" : 0 }, ... ], \"Bids\" : [ { \"Price\" : 0.0 , \"Quantity\" : 0.0 , \"Position\" : 0 }, { \"Price\" : 0.0 , \"Quantity\" : 0.0 , \"Position\" : 0 }, ... ], \"Trade\" : False , \"OpeningPrice\" : 0.0 , \"MaxDay\" : 0.0 , \"MinDay\" : 0.0 , \"VolumeTotalAmount\" : 0 } Response Market Data { \"Ticker\" : \"string\" , \"Price\" : 0.0 , \"VolumeAmount\" : 0.0 , \"VolumeCurrency\" : 0.0 , \"Date\" : \"2022-03-14T16:52:51.87-03:00\" , \"Type\" : \"string\" , \"Settlement\" : \"string\" , \"VarDay\" : 0.0 , \"Offers\" : [], \"Bids\" : [], \"Trade\" : True , \"OpeningPrice\" : 0.0 , \"MaxDay\" : 0.0 , \"MinDay\" : 0.0 , \"VolumeTotalAmount\" : 0 }","title":"Documentaci\u00f3n Librer\u00eda Python"},{"location":"api/documentacionRest/","text":"REST API Current API version: 1.0 ACCOUNT Login Tries to log in with the given credentials. Returns a session token which is needed to use the API. Method: POST /api/{v}/Account/Login Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"user\" : \"string\" , \"password\" : \"string\" } Response Body - 200 Success [ { \"creationDate\" : \"2022-01-18T18:25:36.269Z\" , \"expirationDate\" : \"2022-01-18T18:25:36.269Z\" , \"accessToken\" : \"string\" , \"expires\" : 0 , \"refreshToken\" : \"string\" , \"tokenType\" : \"string\" } ] Refresh Token Tries to refresh the current session. Returns a new session token which is needed to continue using the API. Method: POST /api/{v}/Account/RefreshToken Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"refreshToken\" : \"string\" } Response Body - 200 Success [ { \"creationDate\" : \"2022-01-18T19:47:00.054Z\" , \"expirationDate\" : \"2022-01-18T19:47:00.054Z\" , \"accessToken\" : \"string\" , \"expires\" : 0 , \"refreshToken\" : \"string\" , \"tokenType\" : \"string\" } ] Accounts Retrieves all the available accounts and their officer for the current session. Method: GET /api/{v}/Account/Accounts Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ { \"accountNumber\" : \"string\" , \"name\" : \"string\" , \"officer\" : { \"name\" : \"string\" , \"eMail\" : \"string\" , \"phone\" : \"string\" } } ] Bank Accounts Retrieves all the available bank accounts for the given account. Method: GET /api/{v}/Account/BankAccounts Parameters: Name Type Mandatory Description Location accountNumber string required Account number to retrieve bank accounts Query Params v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ { \"bankName\" : \"string\" , \"bankAccountNumber\" : \"string\" , \"bankIdentifier\" : \"string\" , \"currency\" : \"string\" , \"taxHolderIdentifier\" : \"string\" } ] Available Balance Retrieves cash balance available for trading for the given account. Method: GET /api/{v}/Account/AvailableBalance Parameters: Name Type Mandatory Description Location accountNumber string required Account number to retrieve availability Query Params v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ { \"name\" : \"string\" , \"simbol\" : \"string\" , \"amount\" : 0 , \"settlement\" : \"string\" } ] Balances and Positions Retrieves account balance and positions for the given account. Method: GET /api/{v}/Account/BalancesAndPositions Parameters: Name Type Mandatory Description Location accountNumber string required Account number to retrieve balance and position Query Params v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ { \"currency\" : \"string\" , \"availability\" : [ { \"name\" : \"string\" , \"simbol\" : \"string\" , \"amount\" : 0 , \"settlement\" : \"string\" } ] } ] Account Movements Retrieves movements for the given account between the specified dates. Method: GET /api/{v}/Account/Movements Parameters: Name Type Mandatory Description Location accountNumber string required Account number to retrieve movements Query Params dateFrom string ($date-time) optional Start date to filter the retrieve movements Query Params dateTo string ($date-time) optional Finish date to filter the retrieve movements Query Params ticker string optional Ticker to filter the retrieve movements Query Params v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ { \"agreementDate\" : \"2022-01-19T14:32:51.776Z\" , \"settlementDate\" : \"2022-01-19T14:32:51.776Z\" , \"currency\" : \"string\" , \"amount\" : 0 , \"price\" : 0 , \"description\" : \"string\" , \"ticker\" : \"string\" , \"quantity\" : 0 , \"balance\" : 0 } ] CONFIGURATION Instrument Types Retrieves a list of available instrument types. Method: GET /api/{v}/Configuration/InstrumentTypes Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ \"BONOS\" , \"LETRAS\" , \"NOBAC\" , \"LEBAC\" , \"ON\" , \"FCI\" , \"CAUCIONES\" , \"ACCIONES\" , \"ETF\" , \"CEDEARS\" , \"OPCIONES\" , \"FUTUROS\" , \"ACCIONES-USA\" , \"FCI-EXTERIOR\" ] Markets Retrieves a list of available markets. Method: GET /api/{v}/Configuration/Markets Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ \"ROFEX\" , \"OTC\" , \"NYSE\" , \"BYMA\" ] Settlements Retrieves a list of available settlements. Method: GET /api/{v}/Configuration/Settlements Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ \"INMEDIATA\" , \"A-24HS\" , \"A-48HS\" , \"A-72HS\" ] Quantity Types Retrieves a list of available quantity types. Method: GET /api/{v}/Configuration/QuantityTypes Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ \"DINERO\" , \"PAPELES\" , \"CANTIDAD-TOTAL\" ] Operation Terms Retrieves a list of available operation terms. Method: GET /api/{v}/Configuration/OperationTerms Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ \"POR-EL-D\u00cdA\" , \"HASTA-SU-EJECUCI\u00d3N\" , \"V\u00c1LIDA-HASTA-EL\" , \"72-HS\" ] Operation Types Retrieves a list of available operation types. Method: GET /api/{v}/Configuration/OperationTypes Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ \"PRECIO-DE-MERCADO\" , \"PRECIO-LIMITE\" ] Operations Retrieves a list of available operations. Method: GET /api/{v}/Configuration/Operations Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ \"COMPRA\" , \"VENTA\" , \"SUSCRIPCI\u00d3N-FCI\" , \"RESCATE-FCI\" , \"COLOCAR-CAUCI\u00d3N\" ] MARKET DATA Search Instrument Search for items matching a given filter. Method: GET /api/{v}/MarketData/SearchInstrument Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"ticker\" : \"string\" , \"name\" : \"string\" , \"market\" : \"string\" , \"type\" : \"string\" } Response Body - 200 Success [ { \"ticker\" : \"string\" , \"description\" : \"string\" , \"currency\" : \"string\" , \"type\" : \"string\" , \"market\" : \"string\" }, ... ] Historical Market Data Search for historical market data. Method: GET /api/{v}/MarketData/Search Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"ticker\" : \"string\" , \"type\" : \"string\" , \"dateFrom\" : \"2022-01-19T16:05:20.623Z\" , \"dateTo\" : \"2022-01-19T16:05:20.623Z\" , \"settlement\" : \"string\" } Response Body - 200 Success [ { \"date\" : \"string\" , \"price\" : i nte ger , \"volume\" : i nte ger , \"openingPrice\" : i nte ger , \"max\" : i nte ger , \"min\" : i nte ger }, ... ] Current Market Data Search for current market data. Method: GET /api/{v}/MarketData/Current Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"ticker\" : \"string\" , \"type\" : \"string\" , \"settlement\" : \"string\" } Response Body - 200 Success { \"date\" : \"string\" , \"price\" : i nte ger , \"volume\" : i nte ger , \"openingPrice\" : i nte ger , \"max\" : i nte ger , \"min\" : i nte ger } Intraday Market Data Search for intraday market data. Method: GET /api/{v}/MarketData/Intraday Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"ticker\" : \"string\" , \"type\" : \"string\" , \"settlement\" : \"string\" } Response Body - 200 Success [ { \"date\" : \"string\" , \"price\" : i nte ger , \"volume\" : i nte ger }, ... ] Bids and Offers on Instruments Search for the instrument current book of bids and offers. Method: GET /api/{v}/MarketData/Book Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"ticker\" : \"string\" , \"type\" : \"string\" , \"settlement\" : \"string\" } Response Body - 200 Success { \"date\" : \"2022-02-24T12:31:04.581Z\" , \"offers\" : [ { \"position\" : i nte ger , \"price\" : i nte ger , \"quantity\" : i nte ger } ], \"bids\" : [ { \"position\" : i nte ger , \"price\" : i nte ger , \"quantity\" : i nte ger } ] } ORDERS Orders Retrieves all the filter and active orders for the given account. Method: GET /api/{v}/Order/Orders Parameters: Name Type Mandatory Description Location accountNumber string required Account number Query Params dateFrom string ($date-time) optional Start date to filter the orders (Default last month) Query Params dateTo string ($date-time) optional Finish date to filter the orders (Default current date) Query Params v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:28:19.627Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:28:19.627Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"externalID\" : \"string\" } ] Order Detail Retrieves the information for the order. Method: GET /api/{v}/Order/Detail Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"accountNumber\" : \"string\" , \"orderID\" : 0 } Response Body - 200 Success { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:39:06.888Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:39:06.888Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"externalID\" : \"string\" } Budget Retrieves a budget for a new order. Method: POST /api/{v}/Order/Budget Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"accountNumber\" : \"string\" , \"quantity\" : 0 , \"price\" : 0 , \"ticker\" : \"string\" , \"instrumentType\" : \"string\" , \"quantityType\" : \"string\" , \"operationTerm\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:41:14.973Z\" , \"operation\" : \"string\" , \"settlement\" : \"string\" , \"operationType\" : \"string\" , \"disclaimers\" : [ { \"code\" : \"string\" , \"description\" : \"string\" , \"mandatory\" : true , \"accepted\" : true } ], \"externalID\" : \"string\" } Response Body - 200 Success { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:41:14.986Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:41:14.986Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"disclaimers\" : [ { \"code\" : \"string\" , \"description\" : \"string\" , \"mandatory\" : true , \"accepted\" : true } ] } New Order Confirm the creation for a new order. Method: POST /api/{v}/Order/Confirm Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"accountNumber\" : \"string\" , \"quantity\" : 0 , \"price\" : 0 , \"ticker\" : \"string\" , \"instrumentType\" : \"string\" , \"quantityType\" : \"string\" , \"operationTerm\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:55:43.160Z\" , \"operation\" : \"string\" , \"settlement\" : \"string\" , \"operationType\" : \"string\" , \"disclaimers\" : [ { \"code\" : \"string\" , \"description\" : \"string\" , \"mandatory\" : true , \"accepted\" : true } ], \"externalID\" : \"string\" } Response Body - 200 Success { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-02-24T11:59:18.708Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-02-24T11:59:18.708Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"externalID\" : \"string\" } Cancel an Order Request the cancel for an order. Method: POST /api/{v}/Order/Cancel Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"accountNumber\" : \"string\" , \"orderID\" : 0 , \"externalID\" : \"string\" } Response Body - 200 Success { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:58:00.749Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:58:00.749Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 } Mass Cancel of Orders Request the cancel for all alive orders for the given account. Method: POST /api/{v}/Order/MassCancel Parameters: Name Type Mandatory Description Location accountNumber string required Account number Query Params v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success s tr i n g","title":"API REST"},{"location":"api/documentacionRest/#rest-api","text":"Current API version: 1.0","title":"REST API"},{"location":"api/documentacionRest/#account","text":"","title":"ACCOUNT"},{"location":"api/documentacionRest/#login","text":"Tries to log in with the given credentials. Returns a session token which is needed to use the API. Method: POST /api/{v}/Account/Login Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"user\" : \"string\" , \"password\" : \"string\" } Response Body - 200 Success [ { \"creationDate\" : \"2022-01-18T18:25:36.269Z\" , \"expirationDate\" : \"2022-01-18T18:25:36.269Z\" , \"accessToken\" : \"string\" , \"expires\" : 0 , \"refreshToken\" : \"string\" , \"tokenType\" : \"string\" } ]","title":"Login"},{"location":"api/documentacionRest/#refresh-token","text":"Tries to refresh the current session. Returns a new session token which is needed to continue using the API. Method: POST /api/{v}/Account/RefreshToken Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"refreshToken\" : \"string\" } Response Body - 200 Success [ { \"creationDate\" : \"2022-01-18T19:47:00.054Z\" , \"expirationDate\" : \"2022-01-18T19:47:00.054Z\" , \"accessToken\" : \"string\" , \"expires\" : 0 , \"refreshToken\" : \"string\" , \"tokenType\" : \"string\" } ]","title":"Refresh Token"},{"location":"api/documentacionRest/#accounts","text":"Retrieves all the available accounts and their officer for the current session. Method: GET /api/{v}/Account/Accounts Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ { \"accountNumber\" : \"string\" , \"name\" : \"string\" , \"officer\" : { \"name\" : \"string\" , \"eMail\" : \"string\" , \"phone\" : \"string\" } } ]","title":"Accounts"},{"location":"api/documentacionRest/#bank-accounts","text":"Retrieves all the available bank accounts for the given account. Method: GET /api/{v}/Account/BankAccounts Parameters: Name Type Mandatory Description Location accountNumber string required Account number to retrieve bank accounts Query Params v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ { \"bankName\" : \"string\" , \"bankAccountNumber\" : \"string\" , \"bankIdentifier\" : \"string\" , \"currency\" : \"string\" , \"taxHolderIdentifier\" : \"string\" } ]","title":"Bank Accounts"},{"location":"api/documentacionRest/#available-balance","text":"Retrieves cash balance available for trading for the given account. Method: GET /api/{v}/Account/AvailableBalance Parameters: Name Type Mandatory Description Location accountNumber string required Account number to retrieve availability Query Params v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ { \"name\" : \"string\" , \"simbol\" : \"string\" , \"amount\" : 0 , \"settlement\" : \"string\" } ]","title":"Available Balance"},{"location":"api/documentacionRest/#balances-and-positions","text":"Retrieves account balance and positions for the given account. Method: GET /api/{v}/Account/BalancesAndPositions Parameters: Name Type Mandatory Description Location accountNumber string required Account number to retrieve balance and position Query Params v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ { \"currency\" : \"string\" , \"availability\" : [ { \"name\" : \"string\" , \"simbol\" : \"string\" , \"amount\" : 0 , \"settlement\" : \"string\" } ] } ]","title":"Balances and Positions"},{"location":"api/documentacionRest/#account-movements","text":"Retrieves movements for the given account between the specified dates. Method: GET /api/{v}/Account/Movements Parameters: Name Type Mandatory Description Location accountNumber string required Account number to retrieve movements Query Params dateFrom string ($date-time) optional Start date to filter the retrieve movements Query Params dateTo string ($date-time) optional Finish date to filter the retrieve movements Query Params ticker string optional Ticker to filter the retrieve movements Query Params v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ { \"agreementDate\" : \"2022-01-19T14:32:51.776Z\" , \"settlementDate\" : \"2022-01-19T14:32:51.776Z\" , \"currency\" : \"string\" , \"amount\" : 0 , \"price\" : 0 , \"description\" : \"string\" , \"ticker\" : \"string\" , \"quantity\" : 0 , \"balance\" : 0 } ]","title":"Account Movements"},{"location":"api/documentacionRest/#configuration","text":"","title":"CONFIGURATION"},{"location":"api/documentacionRest/#instrument-types","text":"Retrieves a list of available instrument types. Method: GET /api/{v}/Configuration/InstrumentTypes Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ \"BONOS\" , \"LETRAS\" , \"NOBAC\" , \"LEBAC\" , \"ON\" , \"FCI\" , \"CAUCIONES\" , \"ACCIONES\" , \"ETF\" , \"CEDEARS\" , \"OPCIONES\" , \"FUTUROS\" , \"ACCIONES-USA\" , \"FCI-EXTERIOR\" ]","title":"Instrument Types"},{"location":"api/documentacionRest/#markets","text":"Retrieves a list of available markets. Method: GET /api/{v}/Configuration/Markets Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ \"ROFEX\" , \"OTC\" , \"NYSE\" , \"BYMA\" ]","title":"Markets"},{"location":"api/documentacionRest/#settlements","text":"Retrieves a list of available settlements. Method: GET /api/{v}/Configuration/Settlements Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ \"INMEDIATA\" , \"A-24HS\" , \"A-48HS\" , \"A-72HS\" ]","title":"Settlements"},{"location":"api/documentacionRest/#quantity-types","text":"Retrieves a list of available quantity types. Method: GET /api/{v}/Configuration/QuantityTypes Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ \"DINERO\" , \"PAPELES\" , \"CANTIDAD-TOTAL\" ]","title":"Quantity Types"},{"location":"api/documentacionRest/#operation-terms","text":"Retrieves a list of available operation terms. Method: GET /api/{v}/Configuration/OperationTerms Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ \"POR-EL-D\u00cdA\" , \"HASTA-SU-EJECUCI\u00d3N\" , \"V\u00c1LIDA-HASTA-EL\" , \"72-HS\" ]","title":"Operation Terms"},{"location":"api/documentacionRest/#operation-types","text":"Retrieves a list of available operation types. Method: GET /api/{v}/Configuration/OperationTypes Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ \"PRECIO-DE-MERCADO\" , \"PRECIO-LIMITE\" ]","title":"Operation Types"},{"location":"api/documentacionRest/#operations","text":"Retrieves a list of available operations. Method: GET /api/{v}/Configuration/Operations Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ \"COMPRA\" , \"VENTA\" , \"SUSCRIPCI\u00d3N-FCI\" , \"RESCATE-FCI\" , \"COLOCAR-CAUCI\u00d3N\" ]","title":"Operations"},{"location":"api/documentacionRest/#market-data","text":"","title":"MARKET DATA"},{"location":"api/documentacionRest/#search-instrument","text":"Search for items matching a given filter. Method: GET /api/{v}/MarketData/SearchInstrument Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"ticker\" : \"string\" , \"name\" : \"string\" , \"market\" : \"string\" , \"type\" : \"string\" } Response Body - 200 Success [ { \"ticker\" : \"string\" , \"description\" : \"string\" , \"currency\" : \"string\" , \"type\" : \"string\" , \"market\" : \"string\" }, ... ]","title":"Search Instrument"},{"location":"api/documentacionRest/#historical-market-data","text":"Search for historical market data. Method: GET /api/{v}/MarketData/Search Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"ticker\" : \"string\" , \"type\" : \"string\" , \"dateFrom\" : \"2022-01-19T16:05:20.623Z\" , \"dateTo\" : \"2022-01-19T16:05:20.623Z\" , \"settlement\" : \"string\" } Response Body - 200 Success [ { \"date\" : \"string\" , \"price\" : i nte ger , \"volume\" : i nte ger , \"openingPrice\" : i nte ger , \"max\" : i nte ger , \"min\" : i nte ger }, ... ]","title":"Historical Market Data"},{"location":"api/documentacionRest/#current-market-data","text":"Search for current market data. Method: GET /api/{v}/MarketData/Current Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"ticker\" : \"string\" , \"type\" : \"string\" , \"settlement\" : \"string\" } Response Body - 200 Success { \"date\" : \"string\" , \"price\" : i nte ger , \"volume\" : i nte ger , \"openingPrice\" : i nte ger , \"max\" : i nte ger , \"min\" : i nte ger }","title":"Current Market Data"},{"location":"api/documentacionRest/#intraday-market-data","text":"Search for intraday market data. Method: GET /api/{v}/MarketData/Intraday Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"ticker\" : \"string\" , \"type\" : \"string\" , \"settlement\" : \"string\" } Response Body - 200 Success [ { \"date\" : \"string\" , \"price\" : i nte ger , \"volume\" : i nte ger }, ... ]","title":"Intraday Market Data"},{"location":"api/documentacionRest/#bids-and-offers-on-instruments","text":"Search for the instrument current book of bids and offers. Method: GET /api/{v}/MarketData/Book Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"ticker\" : \"string\" , \"type\" : \"string\" , \"settlement\" : \"string\" } Response Body - 200 Success { \"date\" : \"2022-02-24T12:31:04.581Z\" , \"offers\" : [ { \"position\" : i nte ger , \"price\" : i nte ger , \"quantity\" : i nte ger } ], \"bids\" : [ { \"position\" : i nte ger , \"price\" : i nte ger , \"quantity\" : i nte ger } ] }","title":"Bids and Offers on Instruments"},{"location":"api/documentacionRest/#orders","text":"","title":"ORDERS"},{"location":"api/documentacionRest/#orders_1","text":"Retrieves all the filter and active orders for the given account. Method: GET /api/{v}/Order/Orders Parameters: Name Type Mandatory Description Location accountNumber string required Account number Query Params dateFrom string ($date-time) optional Start date to filter the orders (Default last month) Query Params dateTo string ($date-time) optional Finish date to filter the orders (Default current date) Query Params v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success [ { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:28:19.627Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:28:19.627Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"externalID\" : \"string\" } ]","title":"Orders"},{"location":"api/documentacionRest/#order-detail","text":"Retrieves the information for the order. Method: GET /api/{v}/Order/Detail Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"accountNumber\" : \"string\" , \"orderID\" : 0 } Response Body - 200 Success { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:39:06.888Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:39:06.888Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"externalID\" : \"string\" }","title":"Order Detail"},{"location":"api/documentacionRest/#budget","text":"Retrieves a budget for a new order. Method: POST /api/{v}/Order/Budget Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"accountNumber\" : \"string\" , \"quantity\" : 0 , \"price\" : 0 , \"ticker\" : \"string\" , \"instrumentType\" : \"string\" , \"quantityType\" : \"string\" , \"operationTerm\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:41:14.973Z\" , \"operation\" : \"string\" , \"settlement\" : \"string\" , \"operationType\" : \"string\" , \"disclaimers\" : [ { \"code\" : \"string\" , \"description\" : \"string\" , \"mandatory\" : true , \"accepted\" : true } ], \"externalID\" : \"string\" } Response Body - 200 Success { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:41:14.986Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:41:14.986Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"disclaimers\" : [ { \"code\" : \"string\" , \"description\" : \"string\" , \"mandatory\" : true , \"accepted\" : true } ] }","title":"Budget"},{"location":"api/documentacionRest/#new-order","text":"Confirm the creation for a new order. Method: POST /api/{v}/Order/Confirm Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"accountNumber\" : \"string\" , \"quantity\" : 0 , \"price\" : 0 , \"ticker\" : \"string\" , \"instrumentType\" : \"string\" , \"quantityType\" : \"string\" , \"operationTerm\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:55:43.160Z\" , \"operation\" : \"string\" , \"settlement\" : \"string\" , \"operationType\" : \"string\" , \"disclaimers\" : [ { \"code\" : \"string\" , \"description\" : \"string\" , \"mandatory\" : true , \"accepted\" : true } ], \"externalID\" : \"string\" } Response Body - 200 Success { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-02-24T11:59:18.708Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-02-24T11:59:18.708Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 , \"externalID\" : \"string\" }","title":"New Order"},{"location":"api/documentacionRest/#cancel-an-order","text":"Request the cancel for an order. Method: POST /api/{v}/Order/Cancel Parameters: Name Type Mandatory Description Location v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Request Body { \"accountNumber\" : \"string\" , \"orderID\" : 0 , \"externalID\" : \"string\" } Response Body - 200 Success { \"id\" : 0 , \"instrumentType\" : \"string\" , \"operation\" : \"string\" , \"ticker\" : \"string\" , \"status\" : \"string\" , \"date\" : \"2022-01-31T19:58:00.749Z\" , \"settlement\" : \"string\" , \"quantity\" : 0 , \"orderType\" : \"string\" , \"operationType\" : \"string\" , \"operationMaxDate\" : \"2022-01-31T19:58:00.749Z\" , \"price\" : 0 , \"currency\" : \"string\" , \"amount\" : 0 }","title":"Cancel an Order"},{"location":"api/documentacionRest/#mass-cancel-of-orders","text":"Request the cancel for all alive orders for the given account. Method: POST /api/{v}/Order/MassCancel Parameters: Name Type Mandatory Description Location accountNumber string required Account number Query Params v string required API Version Path AuthorizedClient string required Authorized Client ID for the API Headers ClientKey string required Client Key for the API Headers Response Body - 200 Success s tr i n g","title":"Mass Cancel of Orders"},{"location":"api/ejemploPython/","text":"Ejemplo Runner Python Antes de ejecutar el archivo de ejemploRunner.py se debe haber realizado previamente la instalaci\u00f3n python (recomendamos tener la versi\u00f3n 3.10.2 de Python) y de la libreria ppi-client. Para ejecutar el archivo de ejemplo, debe abrirse una nueva consola y ejecutar el siguiente comando: Comando CMD python ejemploRunner . py Si quer\u00e9s descargar el ejemplo de runner completo ingresa a nuestro repositorio de GitHub . ejemploRunner.py from ppi_client.models.account_movements import AccountMovements from ppi_client.ppi import PPI from ppi_client.models.orders_filter import OrdersFilter from ppi_client.models.order_budget import OrderBudget from ppi_client.models.order_confirm import OrderConfirm from ppi_client.models.disclaimer import Disclaimer from ppi_client.models.search_instrument import SearchInstrument from ppi_client.models.search_marketdata import SearchMarketData from ppi_client.models.search_datemarketdata import SearchDateMarketData from ppi_client.models.order import Order from ppi_client.models.instrument import Instrument from datetime import datetime , timedelta import asyncio import json import traceback \u200b # Change sandbox variable to True to connect to sandbox environment ppi = PPI ( sandbox = False ) \u200b def main (): try : # Change login credential to connect to the API ppi . account . login ( '<user key>' , '<user secret>' ) \u200b # Getting accounts information print ( \"Getting accounts information\" ) account_numbers = ppi . account . get_accounts () for account in account_numbers : print ( account ) account_number = account_numbers [ 0 ][ 'accountNumber' ] \u200b # Getting available balance print ( \" \\n Getting available balance of %s \" % account_number ) balances = ppi . account . get_available_balance ( account_number ) for balance in balances : print ( \"Currency %s - Settlement %s - Amount %s %s \" % ( balance [ 'name' ], balance [ 'settlement' ], balance [ 'symbol' ], balance [ 'amount' ])) \u200b # Realtime subscription to market data def onconnect (): try : print ( \" \\n Connected to realtime\" ) ppi . realtime . subscribe_to_element ( Instrument ( \"GGAL\" , \"ACCIONES\" , \"A-48HS\" )) ppi . realtime . subscribe_to_element ( Instrument ( \"AAPL\" , \"CEDEARS\" , \"A-48HS\" )) ppi . realtime . subscribe_to_element ( Instrument ( \"AL30\" , \"BONOS\" , \"INMEDIATA\" )) ppi . realtime . subscribe_to_element ( Instrument ( \"AL30D\" , \"BONOS\" , \"INMEDIATA\" )) ppi . realtime . subscribe_to_element ( Instrument ( \"DLR/MAR22\" , \"FUTUROS\" , \"INMEDIATA\" )) except Exception as error : traceback . print_exc () \u200b def ondisconnect (): try : print ( \" \\n Disconnected from realtime\" ) except Exception as error : traceback . print_exc () \u200b ppi . realtime . connect_to_market_data ( onconnect , ondisconnect ) \u200b except Exception as message : print ( message ) \u200b if __name__ == '__main__' : main ()","title":"Ejemplo - Python"},{"location":"api/ejemploPython/#ejemplo-runner-python","text":"Antes de ejecutar el archivo de ejemploRunner.py se debe haber realizado previamente la instalaci\u00f3n python (recomendamos tener la versi\u00f3n 3.10.2 de Python) y de la libreria ppi-client. Para ejecutar el archivo de ejemplo, debe abrirse una nueva consola y ejecutar el siguiente comando: Comando CMD python ejemploRunner . py Si quer\u00e9s descargar el ejemplo de runner completo ingresa a nuestro repositorio de GitHub . ejemploRunner.py from ppi_client.models.account_movements import AccountMovements from ppi_client.ppi import PPI from ppi_client.models.orders_filter import OrdersFilter from ppi_client.models.order_budget import OrderBudget from ppi_client.models.order_confirm import OrderConfirm from ppi_client.models.disclaimer import Disclaimer from ppi_client.models.search_instrument import SearchInstrument from ppi_client.models.search_marketdata import SearchMarketData from ppi_client.models.search_datemarketdata import SearchDateMarketData from ppi_client.models.order import Order from ppi_client.models.instrument import Instrument from datetime import datetime , timedelta import asyncio import json import traceback \u200b # Change sandbox variable to True to connect to sandbox environment ppi = PPI ( sandbox = False ) \u200b def main (): try : # Change login credential to connect to the API ppi . account . login ( '<user key>' , '<user secret>' ) \u200b # Getting accounts information print ( \"Getting accounts information\" ) account_numbers = ppi . account . get_accounts () for account in account_numbers : print ( account ) account_number = account_numbers [ 0 ][ 'accountNumber' ] \u200b # Getting available balance print ( \" \\n Getting available balance of %s \" % account_number ) balances = ppi . account . get_available_balance ( account_number ) for balance in balances : print ( \"Currency %s - Settlement %s - Amount %s %s \" % ( balance [ 'name' ], balance [ 'settlement' ], balance [ 'symbol' ], balance [ 'amount' ])) \u200b # Realtime subscription to market data def onconnect (): try : print ( \" \\n Connected to realtime\" ) ppi . realtime . subscribe_to_element ( Instrument ( \"GGAL\" , \"ACCIONES\" , \"A-48HS\" )) ppi . realtime . subscribe_to_element ( Instrument ( \"AAPL\" , \"CEDEARS\" , \"A-48HS\" )) ppi . realtime . subscribe_to_element ( Instrument ( \"AL30\" , \"BONOS\" , \"INMEDIATA\" )) ppi . realtime . subscribe_to_element ( Instrument ( \"AL30D\" , \"BONOS\" , \"INMEDIATA\" )) ppi . realtime . subscribe_to_element ( Instrument ( \"DLR/MAR22\" , \"FUTUROS\" , \"INMEDIATA\" )) except Exception as error : traceback . print_exc () \u200b def ondisconnect (): try : print ( \" \\n Disconnected from realtime\" ) except Exception as error : traceback . print_exc () \u200b ppi . realtime . connect_to_market_data ( onconnect , ondisconnect ) \u200b except Exception as message : print ( message ) \u200b if __name__ == '__main__' : main ()","title":"Ejemplo Runner Python"},{"location":"primerosPasos/credenciales/","text":"Creaci\u00f3n de Credenciales Para comenzar a utilizar nuestra librer\u00eda Pyhton y servicios REST, escribinos desde tu email registrado en PPI a la casilla de: api@portfoliopersonal.com , informando tu nombre, apellido, DNI y n\u00famero de cuenta en PPI. Como \u00fanico requisito para acceder a los servicios API, deb\u00e9s tener una Cuenta Comitente en PPI. En caso de que a\u00fan no seas usuario, pod\u00e9s iniciar la apertura de tu cuenta desde el siguiente link . Una vez que recibamos tu pedido, nos pondremos en contacto para brindarte las credenciales correspondientes y puedas utilizar las herramientas mencionadas. Ya tengo mis credenciales para utilizar las herramientas Como pr\u00f3ximo paso, en la secci\u00f3n de \"Productos API\" . ten\u00e9s a tu disposici\u00f3n la documentaci\u00f3n sobre nuestros servicios con el detalle de la versi\u00f3n que disponemos actualmente para consultar cuando lo necesit\u00e9s. GitHub Community Contamos con una comunidad de GitHub en la que vas a poder encontrar toda la informaci\u00f3n necesaria para el uso de la librer\u00eda y desarrollar tu propio c\u00f3digo.","title":"Creaci\u00f3n de credenciales"},{"location":"primerosPasos/credenciales/#creacion-de-credenciales","text":"Para comenzar a utilizar nuestra librer\u00eda Pyhton y servicios REST, escribinos desde tu email registrado en PPI a la casilla de: api@portfoliopersonal.com , informando tu nombre, apellido, DNI y n\u00famero de cuenta en PPI. Como \u00fanico requisito para acceder a los servicios API, deb\u00e9s tener una Cuenta Comitente en PPI. En caso de que a\u00fan no seas usuario, pod\u00e9s iniciar la apertura de tu cuenta desde el siguiente link . Una vez que recibamos tu pedido, nos pondremos en contacto para brindarte las credenciales correspondientes y puedas utilizar las herramientas mencionadas. Ya tengo mis credenciales para utilizar las herramientas Como pr\u00f3ximo paso, en la secci\u00f3n de \"Productos API\" . ten\u00e9s a tu disposici\u00f3n la documentaci\u00f3n sobre nuestros servicios con el detalle de la versi\u00f3n que disponemos actualmente para consultar cuando lo necesit\u00e9s. GitHub Community Contamos con una comunidad de GitHub en la que vas a poder encontrar toda la informaci\u00f3n necesaria para el uso de la librer\u00eda y desarrollar tu propio c\u00f3digo.","title":"Creaci\u00f3n de Credenciales"}]}